{"ast":null,"code":"import auth0 from 'auth0-js';\nimport history from './history';\nexport default class Auth {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: 'test-react-udemy.auth0.com',\n      clientID: '6o7ZtfIX4DOp43pboX9OLaRBlO1Ld8O5',\n      redirectUri: 'http://localhost:3000/callback',\n      responseType: 'token id_token',\n      scope: 'openid profile email'\n    });\n    this.userProfile = {};\n\n    this.login = () => {\n      this.auth0.authorize();\n    };\n\n    this.handleAuth = () => {\n      this.auth0.parseHash((err, authResult) => {\n        if (authResult) {\n          localStorage.setItem('access_token', authResult.accessToken);\n          localStorage.setItem('id_token', authResult.id_token);\n          let expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n          localStorage.setItem('expiresAt', expiresAt);\n          this.getProfile();\n          setTimeout(() => {\n            history.replace('/authcheck');\n          }, 2000);\n        } else {\n          console.log(err);\n        }\n      });\n    };\n\n    this.getAccessToken = () => {\n      if (localStorage.getItem('access_token')) {\n        const accessToken = localStorage.getItem('access_token');\n        return accessToken;\n      } else {\n        return null;\n      }\n    };\n\n    this.getProfile = () => {\n      let accessToken = this.getAccessToken();\n\n      if (accessToken) {\n        this.auth0.client.userInfo(accessToken, (err, profile) => {\n          if (profile) {\n            this.userProfile = {\n              profile\n            };\n          }\n        });\n      }\n    };\n\n    this.logout = () => {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expiresAt');\n      setTimeout(() => {\n        history.replace('/authcheck');\n      }, 200);\n    };\n\n    this.isAuthenticated = () => {\n      let expiresAt = JSON.parse(localStorage.getItem('expiresAt'));\n      return new Date().getTime() < expiresAt;\n    };\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\ivan.krasowski\\Documents\\React\\app8 - Hooks\\src\\utils\\auth.js"],"names":["auth0","history","Auth","WebAuth","domain","clientID","redirectUri","responseType","scope","userProfile","login","authorize","handleAuth","parseHash","err","authResult","localStorage","setItem","accessToken","id_token","expiresAt","JSON","stringify","expiresIn","Date","getTime","getProfile","setTimeout","replace","console","log","getAccessToken","getItem","client","userInfo","profile","logout","removeItem","isAuthenticated","parse"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,IAAN,CAAW;AAAA;AAAA,SACtBF,KADsB,GACd,IAAIA,KAAK,CAACG,OAAV,CAAkB;AACtBC,MAAAA,MAAM,EAAE,4BADc;AAEtBC,MAAAA,QAAQ,EAAE,kCAFY;AAGtBC,MAAAA,WAAW,EAAE,gCAHS;AAItBC,MAAAA,YAAY,EAAE,gBAJQ;AAKtBC,MAAAA,KAAK,EAAE;AALe,KAAlB,CADc;AAAA,SAStBC,WATsB,GASR,EATQ;;AAAA,SAWtBC,KAXsB,GAWd,MAAM;AACV,WAAKV,KAAL,CAAWW,SAAX;AACH,KAbqB;;AAAA,SAetBC,UAfsB,GAeT,MAAM;AACf,WAAKZ,KAAL,CAAWa,SAAX,CAAqB,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACtC,YAAIA,UAAJ,EAAgB;AACZC,UAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,UAAU,CAACG,WAAhD;AACAF,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,UAAU,CAACI,QAA5C;AAEA,cAAIC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAgBP,UAAU,CAACQ,SAAX,GAAqB,IAArB,GAA4B,IAAIC,IAAJ,GAAWC,OAAX,EAA5C,CAAhB;AACAT,UAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCG,SAAlC;AAEA,eAAKM,UAAL;AACAC,UAAAA,UAAU,CAAC,MAAM;AAAC1B,YAAAA,OAAO,CAAC2B,OAAR,CAAgB,YAAhB;AAA8B,WAAtC,EAAwC,IAAxC,CAAV;AACH,SATD,MASO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACH;AACJ,OAbD;AAcH,KA9BqB;;AAAA,SAgCtBiB,cAhCsB,GAgCL,MAAM;AACnB,UAAIf,YAAY,CAACgB,OAAb,CAAqB,cAArB,CAAJ,EAA0C;AACtC,cAAMd,WAAW,GAAGF,YAAY,CAACgB,OAAb,CAAqB,cAArB,CAApB;AACA,eAAOd,WAAP;AACH,OAHD,MAGO;AACH,eAAO,IAAP;AACH;AACJ,KAvCqB;;AAAA,SAyCtBQ,UAzCsB,GAyCT,MAAM;AACf,UAAIR,WAAW,GAAG,KAAKa,cAAL,EAAlB;;AACA,UAAIb,WAAJ,EAAiB;AACb,aAAKlB,KAAL,CAAWiC,MAAX,CAAkBC,QAAlB,CAA2BhB,WAA3B,EAAwC,CAACJ,GAAD,EAAMqB,OAAN,KAAkB;AACtD,cAAIA,OAAJ,EAAa;AACT,iBAAK1B,WAAL,GAAmB;AAAE0B,cAAAA;AAAF,aAAnB;AACH;AACJ,SAJD;AAKH;AACJ,KAlDqB;;AAAA,SAoDtBC,MApDsB,GAoDb,MAAM;AACXpB,MAAAA,YAAY,CAACqB,UAAb,CAAwB,cAAxB;AACArB,MAAAA,YAAY,CAACqB,UAAb,CAAwB,UAAxB;AACArB,MAAAA,YAAY,CAACqB,UAAb,CAAwB,WAAxB;AACAV,MAAAA,UAAU,CAAC,MAAM;AAAE1B,QAAAA,OAAO,CAAC2B,OAAR,CAAgB,YAAhB;AAA8B,OAAvC,EAAyC,GAAzC,CAAV;AACH,KAzDqB;;AAAA,SA2DtBU,eA3DsB,GA2DJ,MAAM;AACpB,UAAIlB,SAAS,GAAGC,IAAI,CAACkB,KAAL,CAAWvB,YAAY,CAACgB,OAAb,CAAqB,WAArB,CAAX,CAAhB;AACA,aAAO,IAAIR,IAAJ,GAAWC,OAAX,KAAuBL,SAA9B;AACH,KA9DqB;AAAA;;AAAA","sourcesContent":["import auth0 from 'auth0-js';\r\nimport history from './history';\r\n\r\nexport default class Auth {\r\n    auth0 = new auth0.WebAuth({\r\n        domain: 'test-react-udemy.auth0.com',\r\n        clientID: '6o7ZtfIX4DOp43pboX9OLaRBlO1Ld8O5',\r\n        redirectUri: 'http://localhost:3000/callback',\r\n        responseType: 'token id_token',\r\n        scope: 'openid profile email'\r\n    })\r\n\r\n    userProfile = {}\r\n\r\n    login = () => {\r\n        this.auth0.authorize()\r\n    }\r\n\r\n    handleAuth = () => {\r\n        this.auth0.parseHash((err, authResult) => {\r\n            if (authResult) {\r\n                localStorage.setItem('access_token', authResult.accessToken)\r\n                localStorage.setItem('id_token', authResult.id_token)\r\n                \r\n                let expiresAt = JSON.stringify((authResult.expiresIn*1000 + new Date().getTime()))\r\n                localStorage.setItem('expiresAt', expiresAt)\r\n                \r\n                this.getProfile()\r\n                setTimeout(() => {history.replace('/authcheck')}, 2000)\r\n            } else {\r\n                console.log(err)\r\n            }\r\n        })\r\n    }\r\n\r\n    getAccessToken = () => {\r\n        if (localStorage.getItem('access_token')) {\r\n            const accessToken = localStorage.getItem('access_token')\r\n            return accessToken\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    getProfile = () => {\r\n        let accessToken = this.getAccessToken()\r\n        if (accessToken) {\r\n            this.auth0.client.userInfo(accessToken, (err, profile) => {\r\n                if (profile) {\r\n                    this.userProfile = { profile }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem('access_token')\r\n        localStorage.removeItem('id_token')\r\n        localStorage.removeItem('expiresAt')\r\n        setTimeout(() => { history.replace('/authcheck')}, 200)\r\n    }\r\n    \r\n    isAuthenticated = () => {\r\n        let expiresAt = JSON.parse(localStorage.getItem('expiresAt'))\r\n        return new Date().getTime() < expiresAt\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}