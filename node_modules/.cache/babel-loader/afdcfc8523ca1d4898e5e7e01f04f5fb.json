{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ivan.krasowski\\\\Documents\\\\React\\\\app8 - Hooks\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ivan.krasowski\\\\Documents\\\\React\\\\app8 - Hooks\\\\src\\\\hooks\\\\hooks_container1.js\";\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport * as Reducer from '../store/hooks_state/hooks_reducer';\nimport * as ACTIONS from '../store/actions/actions';\nimport Context from '../utils/context';\n\nconst HooksContainer1 = () => {\n  const context = useContext(Context); //const stateValue = useState(0)[0]\n  //const setValue = useState(0)[1]\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        stateValue = _useState2[0],\n        setValue = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        useEffectValue = _useState4[0],\n        setUseEffectValue = _useState4[1];\n\n  const _useReducer = useReducer(Reducer.HooksReducer, Reducer.initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  useEffect(() => {\n    setTimeout(() => setUseEffectValue('useEffect Worked'), 3000);\n  }, [stateValue]);\n\n  const incrementValue = () => {\n    setValue(stateValue + 1);\n  };\n\n  const decrementValue = () => new Promise(function (resolve, reject) {\n    setValue(stateValue - 1);\n  });\n\n  const changeuseEffectValue = () => {\n    setUseEffectValue('Some string');\n  };\n\n  const handleDispatchTrue = () => {\n    //dispatch(ACTIONS.SUCCESS)\n    //dispatch(type: \"SUCCESS\")\n    dispatch(ACTIONS.success());\n  };\n\n  const handleDispatchFalse = () => {\n    //dispatch(ACTIONS.FAILURE)\n    //dispatch(type: \"FAILURE\")\n    dispatch(ACTIONS.failure());\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"React Hooks\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => incrementValue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \" Inc Local State \"), React.createElement(\"button\", {\n    onClick: () => decrementValue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \" Dec Local State \"), React.createElement(\"button\", {\n    onClick: () => changeuseEffectValue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" Change Use Effect \"), React.createElement(\"button\", {\n    onClick: () => handleDispatchTrue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" Dispatch True \"), React.createElement(\"button\", {\n    onClick: () => handleDispatchFalse(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" Dispatch False \"), React.createElement(\"button\", {\n    onClick: () => context.addGlobalValue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" Inc Global State \"), React.createElement(\"button\", {\n    onClick: () => context.decGlobalValue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" Dec Global State \"), React.createElement(\"button\", {\n    onClick: () => context.addGlobalValue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Inc Global State \"), React.createElement(\"button\", {\n    onClick: () => context.decGlobalValue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" Dec Global State \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), useEffectValue ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, useEffectValue) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" No value \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), state.stateprop1 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \" stateprop1 is true \") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \" stateprop1 is false \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Local State: \", stateValue), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Global State: \", context.valueGlobalState)));\n};\n\nexport default HooksContainer1;","map":{"version":3,"sources":["C:\\Users\\ivan.krasowski\\Documents\\React\\app8 - Hooks\\src\\hooks\\hooks_container1.js"],"names":["React","useState","useEffect","useReducer","useContext","Reducer","ACTIONS","Context","HooksContainer1","context","stateValue","setValue","useEffectValue","setUseEffectValue","HooksReducer","initialState","state","dispatch","setTimeout","incrementValue","decrementValue","Promise","resolve","reject","changeuseEffectValue","handleDispatchTrue","success","handleDispatchFalse","failure","addGlobalValue","decGlobalValue","stateprop1","valueGlobalState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from 'react';\r\nimport * as Reducer from '../store/hooks_state/hooks_reducer';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport Context from '../utils/context';\r\n\r\nconst HooksContainer1 = () => {\r\n\r\n    const context = useContext(Context)\r\n  \r\n    //const stateValue = useState(0)[0]\r\n    //const setValue = useState(0)[1]\r\n    const [stateValue, setValue] = useState(0)\r\n    const [useEffectValue, setUseEffectValue] = useState(null)\r\n    const [state, dispatch] = useReducer(Reducer.HooksReducer, Reducer.initialState)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setUseEffectValue('useEffect Worked'), 3000)\r\n    }, [stateValue])\r\n\r\n    const incrementValue = () => {\r\n        setValue(stateValue + 1)\r\n    }\r\n\r\n    const decrementValue = () => new Promise(function(resolve, reject) {\r\n        setValue(stateValue - 1)\r\n    })\r\n\r\n    const changeuseEffectValue = () => {\r\n        setUseEffectValue('Some string')\r\n    }\r\n\r\n    const handleDispatchTrue = () => {\r\n        //dispatch(ACTIONS.SUCCESS)\r\n        //dispatch(type: \"SUCCESS\")\r\n        dispatch(ACTIONS.success())\r\n    }\r\n    \r\n    const handleDispatchFalse = () => {\r\n        //dispatch(ACTIONS.FAILURE)\r\n        //dispatch(type: \"FAILURE\")\r\n        dispatch(ACTIONS.failure())\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          React Hooks\r\n          <br/>\r\n          <button onClick={() => incrementValue()}> Inc Local State </button>\r\n          <button onClick={() => decrementValue()}> Dec Local State </button>\r\n          <button onClick={() => changeuseEffectValue()}> Change Use Effect </button>\r\n          <button onClick={() => handleDispatchTrue()}> Dispatch True </button>\r\n          <button onClick={() => handleDispatchFalse()}> Dispatch False </button>\r\n          <button onClick={() => context.addGlobalValue()}> Inc Global State </button>\r\n          <button onClick={() => context.decGlobalValue()}> Dec Global State </button>\r\n          <button onClick={() => context.addGlobalValue()}> Inc Global State </button>\r\n          <button onClick={() => context.decGlobalValue()}> Dec Global State </button>\r\n          <br/>\r\n          <div>\r\n          <br/>\r\n            {\r\n                useEffectValue\r\n                ? <p>{useEffectValue}</p>\r\n                : <p> No value </p>\r\n            }\r\n            <br/>\r\n            {\r\n                state.stateprop1\r\n                ? <p> stateprop1 is true </p>\r\n                : <p> stateprop1 is false </p>\r\n            }\r\n            <br/>\r\n            <p>Local State: {stateValue}</p>\r\n            <br/>\r\n            <p>Global State: {context.valueGlobalState}</p>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default HooksContainer1;\r\n"]},"metadata":{},"sourceType":"module"}